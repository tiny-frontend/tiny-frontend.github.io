import{r,o as l,c,a as e,b as n,w as i,F as d,e as o,d as s}from"./app.ee617076.js";import{_ as h}from"./plugin-vue_export-helper.21dcd24c.js";const p={},u=e("h1",{id:"deploy-your-own",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#deploy-your-own","aria-hidden":"true"},"#"),o(" Deploy your own")],-1),_=e("p",null,"If you like this architecture and want to deploy your own, this guide is for you! You mostly to deploy 3 things:",-1),y=e("ul",null,[e("li",null,[e("p",null,"A tiny frontend api to deploy your bundle to.")]),e("li",null,[e("p",null,"A tiny frontend of your own to deploy to that api.")]),e("li",null,[e("p",null,[o("The "),e("code",null,"contract"),o(" npm package to publish to an npm registry to consume your tiny frontend at runtime.")])])],-1),m={class:"custom-container warning"},f=e("p",{class:"custom-container-title"},"WARNING",-1),g=o("This section will make much more sense if you have read the "),b=o("Architecture"),k=o(" one before!"),v=e("h2",{id:"deploying-the-tiny-frontend-cloudflare-api",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#deploying-the-tiny-frontend-cloudflare-api","aria-hidden":"true"},"#"),o(" Deploying the tiny frontend Cloudflare api")],-1),w=e("p",null,"This is where your tiny frontend bundles will be deployed to.",-1),x=o("If you don't have one already, "),C={href:"https://workers.cloudflare.com/",target:"_blank",rel:"noopener noreferrer"},T=o("setup a Cloudflare account"),I=o("."),A=o("Fork the "),N={href:"https://github.com/tiny-frontend/api-cloudflare",target:"_blank",rel:"noopener noreferrer"},E=o("tiny frontend api cloudflare"),F=o(" repository on GitHub."),R=e("li",null,[e("p",null,[o("Enable GitHub actions for your forked repo under the "),e("code",null,"Actions"),o(" tab.")])],-1),G=o("Add two new secrets in your forked "),H={href:"https://docs.github.com/en/actions/security-guides/encrypted-secrets#creating-encrypted-secrets-for-a-repository",target:"_blank",rel:"noopener noreferrer"},D=o("GitHub repository secrets"),P=o(":"),L=e("code",null,"CF_ACCOUNT_ID",-1),O=o(" you can find it in the "),U={href:"https://dash.cloudflare.com/?to=/:account/workers/overview",target:"_blank",rel:"noopener noreferrer"},K=o("workers section of your Cloudflare dashboard"),V=o("."),j=e("code",null,"CF_API_TOKEN",-1),Y=o(" you can create one in your "),q={href:"https://dash.cloudflare.com/profile/api-tokens",target:"_blank",rel:"noopener noreferrer"},S=o("Cloudflare profile settings"),W=o(":"),B=s("<ul><li>Select <code>Create Token</code>.</li><li>Next to <code>Edit Cloudflare Workers</code> click <code>Use template</code>.</li><li>Under <code>Account Resources</code> select the account you want to deploy the API to.</li><li>Under <code>Zone Resources</code> select <code>All zones from an account</code> and the account you want to deploy the API to.</li><li>Continue to summary and finally click <code>Create Token</code>.</li></ul>",1),z=e("li",null,[e("p",null,"Clone your forked GitHub repository locally.")],-1),M={href:"https://dash.cloudflare.com/?to=/:account/workers/kv/namespaces",target:"_blank",rel:"noopener noreferrer"},Z=o("Create a KV namespace"),J=o(" in Cloudflare to deploy your tiny frontends to, the name doesn't matter."),Q=s("<li><p>Edit <code>wrangler.toml</code> and set the <code>TinyFrontendKv</code> <code>id</code> value to the <code>KV namespace</code> you&#39;ve created above. (You can ignore the <code>preview_id</code> for now.)</p></li><li><p>Commit and push your changes to <code>main</code>, this will trigger the <code>Deploy Cloudflare Worker</code> GitHub action.</p></li>",2),X=o("You should see the worker appear in your "),$={href:"https://dash.cloudflare.com/?to=/:account/workers/overview",target:"_blank",rel:"noopener noreferrer"},ee=o("Cloudflare workers dashboard"),oe=o(", along with its URL \u{1F389} ."),ne=e("h2",{id:"deploying-the-example-tiny-frontend",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#deploying-the-example-tiny-frontend","aria-hidden":"true"},"#"),o(" Deploying the example tiny frontend")],-1),te=e("p",null,"This is your actual tiny frontend you will deploy to the tiny frontend api above.",-1),se=e("h3",{id:"setting-up-the-repository",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setting-up-the-repository","aria-hidden":"true"},"#"),o(" Setting up the repository")],-1),ae=o("Fork the "),re={href:"https://github.com/tiny-frontend/example-tiny-frontend",target:"_blank",rel:"noopener noreferrer"},ie=o("tiny frontend example"),le=o(" repository on GitHub."),ce=e("li",null,[e("p",null,[o("Enable GitHub actions for your forked repo under the "),e("code",null,"Actions"),o(" tab.")])],-1),de=o("Add three new secrets in your forked "),he={href:"https://docs.github.com/en/actions/security-guides/encrypted-secrets#creating-encrypted-secrets-for-a-repository",target:"_blank",rel:"noopener noreferrer"},pe=o("GitHub repository secrets"),ue=o(":"),_e=e("code",null,"CF_ACCOUNT_ID",-1),ye=o(" you can find it in the "),me={href:"https://dash.cloudflare.com/?to=/:account/workers/overview",target:"_blank",rel:"noopener noreferrer"},fe=o("workers section of your Cloudflare dashboard"),ge=o("."),be=e("li",null,[e("p",null,[e("code",null,"CF_API_TOKEN"),o(" this can be the same as the one created for the tiny frontend Cloudflare api above. If you don't have it anymore, you can follow the same steps again to create a new one.")])],-1),ke=e("li",null,[e("p",null,[e("code",null,"CF_KV_NAMESPACE_TINY_FRONTEND"),o(" set it to the id of the KV namespace you created before.")])],-1),ve=s('<ol start="4"><li>Clone your forked GitHub repository locally.</li></ol><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>In the future, I&#39;d like to have some kind of generator for this step instead of relying on forking the example.</p></div><h3 id="making-changes-to-the-tiny-frontend" tabindex="-1"><a class="header-anchor" href="#making-changes-to-the-tiny-frontend" aria-hidden="true">#</a> Making changes to the tiny frontend</h3><p>Sure, my example component is \u2728 Amazing \u2728, but you probably want something different. Let&#39;s see how to change things.</p><h4 id="running-it-locally" tabindex="-1"><a class="header-anchor" href="#running-it-locally" aria-hidden="true">#</a> Running it locally</h4>',5),we=o("To let you work on your tiny frontend independently of any host, you can use the included "),xe={href:"https://vitejs.dev/",target:"_blank",rel:"noopener noreferrer"},Ce=o("vite"),Te=o(" dev server:"),Ie=s(`<div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> app
<span class="token function">npm</span> i
<span class="token function">npm</span> run dev
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,1),Ae=o("This starts a small dev server on "),Ne={href:"http://localhost:3000",target:"_blank",rel:"noopener noreferrer"},Ee=o("http://localhost:3000"),Fe=o(" with "),Re=e("code",null,"app/index.html",-1),Ge=o(" and "),He=e("code",null,"app/src/main.tsx",-1),De=o("."),Pe=s('<h4 id="changing-the-props" tabindex="-1"><a class="header-anchor" href="#changing-the-props" aria-hidden="true">#</a> Changing the props</h4><p>In <code>contract/src/props.ts</code>, change <code>ExampleTinyFrontendProps</code> to whichever props your component will need.</p><p>Then change the dev app in <code>app/src/App.tsx</code> to pass the required props.</p><div class="custom-container warning"><p class="custom-container-title">WARNING</p><p>Changing props is usually a breaking change.</p><p><strong>If you have already published a version</strong> of your <code>contract</code>, you should also update the version of your tiny frontend in <code>contract/package.json</code>.</p><p>This will ensure your new <code>app</code> with breaking changes doesn&#39;t get pulled by consumers of the current contract, who might not be compatible at runtime with your change.</p></div><h4 id="changing-the-implementation" tabindex="-1"><a class="header-anchor" href="#changing-the-implementation" aria-hidden="true">#</a> Changing the implementation</h4><p>In <code>app/lib/index.tsx</code>, you can change the implementation of your component.</p><h4 id="deploying-the-app" tabindex="-1"><a class="header-anchor" href="#deploying-the-app" aria-hidden="true">#</a> Deploying the <code>app</code></h4><p>Once you&#39;re happy with your frontend, simply commit and push. This should trigger the <code>Deploy Tiny Frontend</code> GitHub action, and deploy your frontend to your tiny api for your <code>contract</code> version.</p><h3 id="consuming-the-contract-locally" tabindex="-1"><a class="header-anchor" href="#consuming-the-contract-locally" aria-hidden="true">#</a> Consuming the <code>contract</code> locally</h3>',9),Le=o("If you don't want to publish the "),Oe=e("code",null,"contract",-1),Ue=o(" npm package to a npm repository to try it out, you can consume it locally using "),Ke={href:"https://www.npmjs.com/package/yalc",target:"_blank",rel:"noopener noreferrer"},Ve=o("yalc"),je=o("."),Ye=s(`<p>First, &quot;publish&quot; your <code>contract</code> on your machine:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> contract
<span class="token function">npm</span> i
<span class="token function">npm</span> run build
npx yalc publish
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><div class="custom-container tip"><p class="custom-container-title">TIP</p><p>This won&#39;t publish it online, only locally on your computer!</p></div>`,3),qe=o("Create an example Remix app, or "),Se={href:"https://github.com/tiny-frontend/example-host-remix-node",target:"_blank",rel:"noopener noreferrer"},We=o("clone the example host remix one"),Be=o("."),ze=s(`<p>Install your local <code>contract</code> package:</p><div class="language-bash ext-sh line-numbers-mode"><pre class="language-bash"><code><span class="token builtin class-name">cd</span> my-remix-app
npx yalc <span class="token function">add</span> @tiny-frontend/example-tiny-frontend-contract
<span class="token function">npm</span> i
</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div>`,2),Me=o("You can now "),Ze=o("use your tiny frontend"),Je=o(" in your Remix app by "),Qe=e("strong",null,"pointing to your deployed tiny api",-1),Xe=o(":"),$e=s('<div class="language-typescript ext-ts line-numbers-mode"><pre class="language-typescript"><code><span class="token comment">// \u26A0\uFE0F Notice the `/api` at the end of that URL!</span>\n<span class="token function">loadExampleTinyFrontendClient</span><span class="token punctuation">(</span><span class="token string">&quot;https://YOUR-CLOUDFLARE-WORKER.workers.dev/api&quot;</span><span class="token punctuation">)</span>\n</code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br></div></div><h3 id="publishing-the-contract" tabindex="-1"><a class="header-anchor" href="#publishing-the-contract" aria-hidden="true">#</a> Publishing the <code>contract</code></h3><p>The <code>contract</code> can be deployed like any regular npm package.</p><p>The example tiny frontend include a <code>Publish</code> GitHub action that publishes to the public npm repository when you create a GitHub release.</p>',4),eo=o("Checkout "),oo={href:"https://docs.github.com/en/actions/publishing-packages/publishing-nodejs-packages",target:"_blank",rel:"noopener noreferrer"},no=o("GitHub actions documentation"),to=o(" on how to publish to other npm repositories.");function so(ao,ro){const a=r("RouterLink"),t=r("ExternalLinkIcon");return l(),c(d,null,[u,_,y,e("div",m,[f,e("p",null,[g,n(a,{to:"/guide/architecture.html"},{default:i(()=>[b]),_:1}),k])]),v,w,e("ol",null,[e("li",null,[e("p",null,[x,e("a",C,[T,n(t)]),I])]),e("li",null,[e("p",null,[A,e("a",N,[E,n(t)]),F])]),R,e("li",null,[e("p",null,[G,e("a",H,[D,n(t)]),P]),e("ul",null,[e("li",null,[e("p",null,[L,O,e("a",U,[K,n(t)]),V])]),e("li",null,[e("p",null,[j,Y,e("a",q,[S,n(t)]),W]),B])])]),z,e("li",null,[e("p",null,[e("a",M,[Z,n(t)]),J])]),Q]),e("p",null,[X,e("a",$,[ee,n(t)]),oe]),ne,te,se,e("ol",null,[e("li",null,[e("p",null,[ae,e("a",re,[ie,n(t)]),le])]),ce,e("li",null,[e("p",null,[de,e("a",he,[pe,n(t)]),ue])])]),e("ul",null,[e("li",null,[e("p",null,[_e,ye,e("a",me,[fe,n(t)]),ge])]),be,ke]),ve,e("p",null,[we,e("a",xe,[Ce,n(t)]),Te]),Ie,e("p",null,[Ae,e("a",Ne,[Ee,n(t)]),Fe,Re,Ge,He,De]),Pe,e("p",null,[Le,Oe,Ue,e("a",Ke,[Ve,n(t)]),je]),Ye,e("p",null,[qe,e("a",Se,[We,n(t)]),Be]),ze,e("p",null,[Me,n(a,{to:"/guide/architecture.html#example-remix-host"},{default:i(()=>[Ze]),_:1}),Je,Qe,Xe]),$e,e("p",null,[eo,e("a",oo,[no,n(t)]),to])],64)}var co=h(p,[["render",so]]);export{co as default};
